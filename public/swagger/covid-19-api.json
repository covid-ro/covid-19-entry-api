{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "COVID-19 Monitor API"
  },
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "API-KEY": {
      "type": "apiKey",
      "name": "X-API-KEY",
      "in": "header"
    },
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Standard user authorization header using the Bearer scheme. \n\nExample: \"Bearer {user-token}\""
    }
  },
  "security": [
    {
      "API-KEY": []
    }
  ],
  "paths": {
    "/phone/validate": {
      "post": {
        "tags": [
          "Phone validation"
        ],
        "summary": "Validate phone number",
        "operationId": "ValidatePhoneNumber",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValidatePhoneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ValidatePhoneResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/phone/check": {
      "post": {
        "tags": [
          "Phone validation"
        ],
        "summary": "Check phone number validation code",
        "operationId": "CheckPhoneNumber",
        "description": "Use either phone & phone_country_prefix OR phone_identifier",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CheckPhoneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckPhoneResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/border/checkpoint": {
      "post": {
        "tags": [
          "Border checkpoint"
        ],
        "summary": "Create new border checkpoint",
        "operationId": "CreateBorderCheckpoint",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateBorderCheckpointRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBorderCheckpointResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Border checkpoint"
        ],
        "summary": "Get border checkpoint list",
        "operationId": "GetBorderCheckpointList",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "type": "string",
            "in": "query",
            "required": false,
            "example": "active",
            "enum": [
              "active",
              "inactive"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBorderCheckpointList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/border/checkpoint/{id}": {
      "get": {
        "security": [
          {
            "API-KEY": [],
            "Authorization": []
          }
        ],
        "tags": [
          "Border checkpoint"
        ],
        "summary": "Get border checkpoint",
        "operationId": "GetBorderCheckpoint",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Border checkpoint ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBorderCheckpointResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "API-KEY": [],
            "Authorization": []
          }
        ],
        "tags": [
          "Border checkpoint"
        ],
        "summary": "Update border checkpoint",
        "operationId": "UpdateBorderCheckpoint",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Border checkpoint ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateBorderCheckpointRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBorderCheckpointResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "API-KEY": [],
            "Authorization": []
          }
        ],
        "tags": [
          "Border checkpoint"
        ],
        "summary": "Delete (inactivate) border checkpoint",
        "operationId": "DeleteBorderCheckpoint",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Border checkpoint ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBorderCheckpointResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/declaration": {
      "post": {
        "security": [
          {
            "API-KEY": [],
            "Authorization": []
          }
        ],
        "tags": [
          "Declaration"
        ],
        "summary": "Create declaration",
        "operationId": "CreateDeclaration",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateDeclarationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDeclarationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "API-KEY": [],
            "Authorization": []
          }
        ],
        "tags": [
          "Declaration"
        ],
        "summary": "Get declaration list",
        "operationId": "GetDeclarationList",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vehicle_type",
            "type": "string",
            "in": "query",
            "required": false,
            "example": "auto",
            "enum": [
              "auto",
              "ambulance"
            ]
          },
          {
            "name": "vehicle_registration_no",
            "type": "string",
            "in": "query",
            "required": false,
            "example": "IF-51-MED"
          },
          {
            "name": "page",
            "type": "integer",
            "in": "query",
            "description": "Result pagination number",
            "required": false,
            "example": 1,
            "default": 1
          },
          {
            "name": "per_page",
            "type": "integer",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "example": 50,
            "default": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDeclarationListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/declaration/{declarationCode}": {
      "get": {
        "security": [
          {
            "API-KEY": [],
            "Authorization": []
          }
        ],
        "tags": [
          "Declaration"
        ],
        "summary": "Get declaration",
        "operationId": "GetDeclaration",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "declarationCode",
            "in": "path",
            "description": "Unique declaration code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDeclarationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ValidatePhoneRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string",
          "example": "722334455",
          "required": true
        },
        "phone_country_prefix": {
          "type": "string",
          "example": "40",
          "required": true
        },
        "phone_identifier": {
          "type": "string",
          "example": "ae30c823-a6ef-4606-a60d-bf9513a4305a",
          "required": false
        }
      }
    },
    "ValidatePhoneResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "message": {
          "type": "string",
          "example": "SMS sent to phone"
        }
      }
    },
    "CheckPhoneRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string",
          "example": "722334455",
          "required": false
        },
        "phone_country_prefix": {
          "type": "string",
          "example": "40",
          "required": false
        },
        "phone_identifier": {
          "type": "string",
          "example": "ae30c823-a6ef-4606-a60d-bf9513a4305a",
          "required": false
        },
        "phone_validation_code": {
          "type": "integer",
          "example": 123456,
          "required": true
        }
      }
    },
    "CheckPhoneResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "message": {
          "type": "string",
          "example": "Phone validated"
        },
        "token": {
          "type": "string",
          "example": "3415d1e8ee3b65e1641326512eef739a"
        }
      }
    },
    "CreateDeclarationRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Last Name",
          "required": true
        },
        "surname": {
          "type": "surstring",
          "example": "First Name",
          "required": true
        },
        "email": {
          "type": "email",
          "example": "name.surname@gmail.com",
          "required": false
        },
        "cnp": {
          "type": "string",
          "example": "2870401102315",
          "required": true
        },
        "border_checkpoint_id": {
          "type": "integer",
          "example": 1,
          "required": false
        },
        "document_type": {
          "type": "string",
          "example": "identity_card",
          "enum": [
            "identity_card",
            "passport"
          ],
          "required": true
        },
        "document_series": {
          "type": "string",
          "example": "AA",
          "required": true
        },
        "document_number": {
          "type": "string",
          "example": "0123456789",
          "required": true
        },
        "travelling_from_country_code": {
          "type": "string",
          "example": "IT",
          "required": true
        },
        "travelling_from_city": {
          "type": "string",
          "example": "Rome",
          "required": true
        },
        "travelling_from_date": {
          "type": "string",
          "example": "2020-03-23",
          "required": true
        },
        "isolation_addresses": {
          "type": "array",
          "description": "List of Isolation Addresses",
          "minItems": 1,
          "required": true,
          "items": {
            "$ref": "#/definitions/IsolationAddress"
          }
        },
        "question_1_answer": {
          "type": "string",
          "example": "First question answer",
          "required": true
        },
        "question_2_answer": {
          "type": "string",
          "example": "Second question answer",
          "required": true
        },
        "question_3_answer": {
          "type": "string",
          "example": "Third question answer",
          "required": true
        },
        "symptom_fever": {
          "type": "boolean",
          "example": false,
          "required": true
        },
        "symptom_swallow": {
          "type": "boolean",
          "example": false,
          "required": true
        },
        "symptom_breathing": {
          "type": "boolean",
          "example": false,
          "required": true
        },
        "symptom_cough": {
          "type": "boolean",
          "example": false,
          "required": true
        },
        "itinerary_countries": {
          "type": "array",
          "description": "List of ISO2 country code",
          "minItems": 1,
          "required": true,
          "items": {
            "type": "string"
          },
          "example": [
            "IT",
            "FR",
            "HU"
          ]
        },
        "vehicle_type": {
          "type": "string",
          "example": "auto",
          "enum": [
            "auto",
            "ambulance"
          ],
          "required": true
        },
        "vehicle_registration_no": {
          "type": "string",
          "example": "IF-51-MED",
          "required": true
        }
      }
    },
    "CreateDeclarationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "message": {
          "type": "string",
          "example": "Declaration created"
        },
        "declaration_code": {
          "type": "string",
          "example": "AAAAAA"
        }
      }
    },
    "IsolationAddress": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "example": "Craiova",
          "required": true
        },
        "county": {
          "type": "string",
          "example": "Olt",
          "required": true
        },
        "city_full_address": {
          "type": "string",
          "example": "Full city address",
          "required": true
        },
        "city_arrival_date": {
          "type": "string",
          "example": "2020-03-20",
          "required": true
        },
        "city_departure_date": {
          "type": "string",
          "example": "2020-03-23",
          "required": false
        }
      }
    },
    "GetDeclarationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "message": {
          "type": "string",
          "example": "Declaration details"
        },
        "declaration": {
          "type": "object",
          "$ref": "#/definitions/Declaration"
        }
      }
    },
    "GetDeclarationListResponse": {
      "type": "object",
      "properties": {
        "current_page": {
          "type": "integer",
          "example": 1
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Declaration"
          }
        },
        "first_page_url": {
          "type": "string",
          "example": "https://application.url/resource?page=1"
        },
        "from": {
          "type": "integer",
          "example": 1
        },
        "last_page": {
          "type": "integer",
          "example": 5
        },
        "last_page_url": {
          "type": "string",
          "example": "https://application.url/resource?page=3"
        },
        "next_page_url": {
          "type": "string",
          "example": "https://application.url/resource?page=2"
        },
        "path": {
          "type": "string",
          "example": "https://application.url/resource"
        },
        "per_page": {
          "type": "integer",
          "example": 100
        },
        "prev_page_url": {
          "type": "string",
          "example": "https://application.url/resource?page=1"
        },
        "to": {
          "type": "integer",
          "example": 100
        },
        "total": {
          "type": "integer",
          "example": 100
        }
      }
    },
    "Declaration": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "AAAAAA"
        },
        "phone": {
          "type": "string",
          "example": "+40722334455"
        },
        "name": {
          "type": "string",
          "example": "Last Name"
        },
        "surname": {
          "type": "surstring",
          "example": "First Name"
        },
        "email": {
          "type": "email",
          "example": "name.surname@gmail.com"
        },
        "cnp": {
          "type": "string",
          "example": "2870401102315"
        },
        "birth_date": {
          "type": "string",
          "example": "1999-12-31"
        },
        "sex": {
          "type": "string",
          "example": "M"
        },
        "document_type": {
          "type": "string",
          "example": "identity_card",
          "enum": [
            "identity_card",
            "passport"
          ]
        },
        "border_checkpoint_id": {
          "type": "int",
          "example": 1
        },
        "document_series": {
          "type": "string",
          "example": "AA"
        },
        "document_number": {
          "type": "string",
          "example": "0123456789"
        },
        "travelling_from_country_code": {
          "type": "string",
          "example": "IT"
        },
        "travelling_from_city": {
          "type": "string",
          "example": "Rome"
        },
        "travelling_from_date": {
          "type": "string",
          "example": "2020-03-23"
        },
        "isolation_addresses": {
          "type": "array",
          "description": "List of Isolation Addresses",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/IsolationAddress"
          }
        },
        "question_1_answer": {
          "type": "string",
          "example": "First question answer"
        },
        "question_2_answer": {
          "type": "string",
          "example": "Second question answer"
        },
        "question_3_answer": {
          "type": "string",
          "example": "Third question answer"
        },
        "symptom_fever": {
          "type": "boolean",
          "example": false
        },
        "symptom_swallow": {
          "type": "boolean",
          "example": false
        },
        "symptom_breathing": {
          "type": "boolean",
          "example": false
        },
        "symptom_cough": {
          "type": "boolean",
          "example": false
        },
        "itinerary_countries": {
          "type": "array",
          "description": "List of ISO2 country code",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "example": [
            "IT",
            "FR",
            "HU"
          ]
        },
        "vehicle_type": {
          "type": "string",
          "example": "auto",
          "enum": [
            "auto",
            "ambulance"
          ]
        },
        "vehicle_registration_no": {
          "type": "string",
          "example": "IF-51-MED"
        }
      }
    },
    "GetBorderCheckpointList": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "message": {
          "type": "string",
          "example": "Border Checkpoint List"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BorderCheckpoint"
          }
        }
      }
    },
    "BorderCheckpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Aeroportul Internațional Aurel Vlaicu"
        },
        "status": {
          "type": "string",
          "example": "active",
          "enum": [
            "active",
            "inactive"
          ]
        }
      }
    },
    "CreateBorderCheckpointRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true,
          "example": "Border Checkpoint Name"
        }
      }
    },
    "UpdateBorderCheckpointRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": false,
          "example": "Updated Border Checkpoint Name"
        },
        "status": {
          "type": "string",
          "required": false,
          "example": "active",
          "enum": [
            "active",
            "inactive"
          ]
        }
      }
    },
    "GetBorderCheckpointResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "message": {
          "type": "string",
          "example": "Border checkpoint"
        },
        "data": {
          "$ref": "#/definitions/BorderCheckpoint"
        }
      }
    },
    "BadRequestResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "type": "string",
          "example": "Missing required parameter: parameterName"
        }
      }
    },
    "UnauthorizedResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "type": "string",
          "example": "Unauthorized"
        }
      }
    },
    "NotFoundResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "type": "string",
          "example": "Not Found"
        }
      }
    },
    "ConflictResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "type": "string",
          "example": "Failed to send SMS to phone"
        },
        "details": {
          "type": "string",
          "example": "Gateway error details"
        }
      }
    },
    "InternalServerErrorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "type": "string",
          "example": "An unexpected condition was encountered"
        }
      }
    }
  }
}